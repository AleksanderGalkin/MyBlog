@using MyBlog.ViewModels;
@using MyBlog.Models;

@model  PostGroupVm



    @using MyBlog.Infrastructure.Services
    @using MyBlogContract.Band
    @using MyBlogContract.TagManage


<div class="row">
    <div class="col-md-11">
        <h3>
            <strong>
                @Html.DisplayFor(m => m.Tittle)
            </strong>
        </h3>
    </div>
    <div class="col-md-1">
        <h3>
            <small>
                @Html.DisplayFor(m => m.PubDate)
            </small>
        </h3>
    </div>
</div>
@Html.Action("AuthorControlEdit", new { PostId = Model.PostId })
<div class="row">
    <div class="col-md-12">
        @{

            if (Model.GroupPostContents.Count == 0)
            {
                @Html.Partial("NotFoundContent", "NotFoundContent", null)
                return;
            }

            GroupVmDisplay group1 = Model.GroupPostContents[0];
            IDeGroupBand dte = PlugInFactory.GetModelByInterface<IDeGroupBand>(group1.GroupPluginName);

            if (dte != null)
            {

                dte.PostId = group1.PostId;
                dte.Order = group1.Order;
                dte.CallbackControllerName_CmdShowPostView = "PostView";
                dte.CallbackActionName_CmdShowPostView = "ShowPost";
                dte.PostId_CmdShowPostView = group1.PostId;


                @Html.Action("Display"
                     , PlugInFactory.GetControllerNameByInterface<IBandDisplay>(group1.GroupPluginName)
                     , dte.GetDictionary())


            }
            else
            {
                string plugin_string = group1.GroupPluginName ?? "(empty)";
                @Html.Partial("NotFounPlugin", plugin_string, null)
            }


        }
    </div>
</div>

<div class="row text-info">
    <div class="col-md-12">

        @{
            IDtoTag dto_tag = PlugInFactory.GetModelByInterface<IDtoTag>();

            if (dto_tag != null)
            {

                dto_tag.PostId = Model.PostId;
                dto_tag.StoreModelKey = Model.TagSession;
                dto_tag.CallbackControllerName_CmdShowPostByTag = "SearchHost";
                dto_tag.CallbackActionName_CmdShowPostByTag = "SearchByTags";

                @Html.Action("Display"
                            , PlugInFactory.GetControllerNameByInterface<ITagDisplay>()
                            , dto_tag.GetDictionary())


            }
        }
    </div>
</div>


<div class="row text-info">
    <div class="col-md-6">

        @{MvcHtmlString link = Html.Action("GetPostUrl", PlugInFactory.GetControllerNameByInterface<IBandDisplay>(group1.GroupPluginName), dte.GetDictionary()); }
        @{
            string link_disqus_bookmark = link + "#disqus_thread";
            int disqus_identifier_post_id = Model.PostId;
            int disqus_identifier_content_id = 0;
            string disqus_identifier = disqus_identifier_post_id.ToString() + ':' + disqus_identifier_content_id.ToString();
        }
        <a href="@link_disqus_bookmark">
            @Html.DisplayNameFor(m => m.PostCommentCount) :
        </a>
        <a href="@link_disqus_bookmark" data-disqus-identifier='@disqus_identifier'>
        </a>
    </div>

    <div class="col-md-6">
        @Html.DisplayNameFor(m => m.PostViewCount) : @Html.DisplayFor(m => m.PostViewCount)
    </div>
</div>

<hr />