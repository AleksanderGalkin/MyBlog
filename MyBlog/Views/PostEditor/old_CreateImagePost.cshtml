@using MyBlog.ViewModels
@model  MyBlog.ViewModels.PostEditVm

@{
    ViewBag.Title = "CreateImagePost";
    Layout = null;
}

<div class="container">

    <div class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-md-2">Файл</label> 
            <div class=" col-md-10">
                <span class="btn btn-success fileinput-button">
                    <i class="glyphicon glyphicon-plus"></i>
                    <span>Add files...</span>
                    <input type="file" class="input-file" id="fileupload" name="files" multiple="multiple" />
                </span>
            </div>
        </div>
        <div class="form-group">
            <div class=" col-md-offset-2 col-md-10">
                <!-- The global progress bar -->
                <div id="progress" class="progress">
                    <div class="progress-bar progress-bar-success"></div>
                </div>
                <!-- The container for the uploaded files -->
                <div id="files" class="files"></div>
            </div>
        </div>
    </div>
   
</div>



    @Styles.Render("~/Content/fileupload")
    @Scripts.Render("~/bundles/fileupload")




    <script type="text/javascript">
        $(function () {
    'use strict';
    // Change this to the location of your server-side upload handler:
    var url = window.location.hostname === 'blueimp.github.io' ?
                '//jquery-file-upload.appspot.com/' : '/PostEditor/LoadFile/',
        uploadButton = $('<button/>')
            .addClass('btn btn-primary')
            .prop('disabled', true)
            .text('Processing...')
            .on('click', function () {
                var $this = $(this),
                    data = $this.data();
                $this
                    .off('click')
                    .text('Abort')
                    .on('click', function () {
                        $this.remove();
                        data.abort();
                    });
                data.submit().always(function () {
                    $this.remove();
                });
            });
    $('#fileupload').fileupload({
        url: url,
        dataType: 'json',
        autoUpload: false,
        acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
        maxFileSize: 999000,
        // Enable image resizing, except for Android and Opera,
        // which actually support image resizing, but fail to
        // send Blob objects via XHR requests:
        disableImageResize: /Android(?!.*Chrome)|Opera/
            .test(window.navigator.userAgent),
        previewMaxWidth: 100,
        previewMaxHeight: 100,
        previewCrop: true
        //,
        //add: function (e, data) {
        //    $("#sub_button").on("click", function () {
        //        if (sendData) {
        //            data.formData = $("#CreateImagePostForm").serializeArray();
        //            sendData = false;
        //        }

        //        data.submit();
        //    });
        //}
    }).on('fileuploadadd', function (e, data) {
       // debugger;
        data.context = $('<div/>').appendTo('#files');
        $.each(data.files, function (index, file) {

            var node = $('<p/>').attr('id', file.name.replace(/\./g,''))
                    .append($('<span/>').text(file.name));

            if (!index) {
                node
                    .append('<br>')
                    .append(uploadButton.clone(true).data(data));
             }
            node.appendTo(data.context);
        });
    }).on('fileuploadprocessalways', function (e, data) {
        debugger;
        var index = data.index,
            file = data.files[index],
            node = $(data.context.children()[index]);
        if (file.preview) {
            node
                .prepend('<br>')
                .prepend(file.preview);
        }
        if (file.error) {
            node
                .append('<br>')
                .append($('<span class="text-danger"/>').text(file.error));
        }
        if (index + 1 === data.files.length) {
            data.context.find('button')
                .text('Upload')
                .prop('disabled', !!data.files.error);
        }
    }).on('fileuploadprogressall', function (e, data) {
        var progress = parseInt(data.loaded / data.total * 100, 10);
        $('#progress .progress-bar').css(
            'width',
            progress + '%'
        );
    }).on('fileuploaddone', function (e, data) {
        $.each(data.result.files, function (index, file) {
            if (file.url) {
                var link = $('<a>')
                    .attr('target', '_blank')
                    .prop('href', file.url);
                $(data.context.children()[index])
                    .wrap(link);
                $('#' + file.name).wrap('<div id = "' + file.id + '" class = "col-md-offset-2 col-md-9"></div>')
                $('#' + file.id).insertBefore('#dropdown-menu')
            } else if (file.error) {
                var error = $('<span class="text-danger"/>').text(file.error);
                $(data.context.children()[index])
                    .append('<br>')
                    .append(error);
            }
        });
    }).on('fileuploadfail', function (e, data) {
        $.each(data.files, function (index) {
            var error = $('<span class="text-danger"/>').text('File upload failed.');
            $(data.context.children()[index])
                .append('<br>')
                .append(error);
        });
    }) .prop('disabled', !$.support.fileInput)
        .parent().addClass($.support.fileInput ? undefined : 'disabled');
});
    </script>
