@model PluginTextPostType.Models.VmDisplay
@{
    Layout = null;
}
@using System.Text.RegularExpressions;

<div class="row col-md-10" id="@Model.PostContentId" data-edit-diff-flag="@Model.data_edit_diff_flag"
                                                data-_temporary_PostContentId="@Model.tempPostContentId">
    <div class="row">
        <div class="col-md-12">
            <p class="text-right">
                <em>
                    @Html.DisplayFor(x => x.Comment)
                </em>
            </p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-10">
            
                @if (Model.Data != null)
                {



                    int num_of_string_cut = Model.Data.Length;
                    int text_position = 0;
                    bool is_bracket_open = false;
                    for (int i = 0; i < Model.Data.Length; i++)
                    {
                        if (Model.Data[i] == '<')
                        {
                            is_bracket_open = true;
                        }
                        else
                        if (Model.Data[i] == '>')
                        {
                            is_bracket_open = false;
                        }
                        else
                        if (!is_bracket_open)
                        {
                            text_position++;
                            if (text_position == 80)
                            {
                                num_of_string_cut = i;
                            }
                        }
                    }


                    var len = 0;
                    string str_continue = "";
                    if (Model.Data.Length < num_of_string_cut)
                    { len = Model.Data.Length; }
                    else
                    { len = num_of_string_cut; str_continue = "......   (продолжение)"; }

                    string showing_string = Model.Data.Substring(0, len);
                    string cutted_showing_string = "";
                    cutted_showing_string = Regex.Replace(showing_string, @"<table>.*</table>", " ");

                    @Html.Raw(cutted_showing_string)
                    if (!String.IsNullOrEmpty(str_continue))
                    {
                        @Html.ActionLink(@str_continue, "Display", "PluginFullContent", new {PostId = Model.PostId,
                                                                                               PostContentId = Model.PostContentId,
                                                                                               AreaName = Model.AreaName }, null)
                    }

                    string cutted_string = Model.Data.Substring(len);
                    var matches = Regex.Matches(cutted_string, @"</\w+>");
                    foreach (Match i in matches)
                    {
                        @Html.Raw(@i.Value);
                    }




            }
        
        </div>
        <div class="col-md-2">
            @Ajax.ActionLink("Edit", "Modify", new
       {
           PostContentId = Model.PostContentId,
           PostContentIdForNewRecords = Model.tempPostContentId,
           PostId = Model.PostId,
           data_edit_diff_flag = Model.data_edit_diff_flag,
           List_content_insert_before_Id = Model.List_content_insert_before_Id,
           Update_area_replace_Id = Model.Update_area_replace_Id,
           OnSuccessRemoveCallback = Model.OnSuccessRemoveCallback
       },
            new AjaxOptions
            {
                HttpMethod = "GET",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = Model.Update_area_replace_Id
            })
            <br />
            @Ajax.ActionLink("Delete", "DeleteContent", new
       {
           PostContentId = Model.PostContentId,
           tempPostContentId = Model.tempPostContentId,
           PostId = Model.PostId
       },
            new AjaxOptions
            {
                HttpMethod = "POST",
                Confirm = "Удалить?",
                OnSuccess = Model.OnSuccessRemoveCallback

            })
        </div>
    </div>
</div>

